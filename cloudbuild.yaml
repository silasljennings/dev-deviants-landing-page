steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$REPO_NAME:$SHORT_SHA', '.']

  # Verify the image was built and tagged correctly
  - name: 'gcr.io/cloud-builders/docker'
    args: ['images', 'us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$REPO_NAME:$SHORT_SHA']

  # Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$REPO_NAME:$SHORT_SHA']

  # 1) Generate the SECRET_KEY and export it for the next step
  - name: 'gcr.io/cloud-builders/openssl'
    entrypoint: bash
    args:
      - -c
      - |
        echo "SECRET_KEY=$(openssl rand -hex 24)" > /workspace/secret.env

#  # Deploy the image to Cloud Run
#  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#    entrypoint: gcloud
#    args: [
#      'run',
#      'deploy',
#      '$REPO_NAME',
#      '--image', 'us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$REPO_NAME:$SHORT_SHA',
#      '--region', 'us-central1',
#      '--set-env-vars', 'SECRET_KEY=$(openssl rand -hex 24)'
#    ]

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
        - -c
        - |
          source /workspace/secret.env
          echo "Deploying with SECRET_KEY: $SECRET_KEY"
          gcloud run deploy $REPO_NAME \
            --image us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$REPO_NAME:$SHORT_SHA \
            --region us-central1 \
            --set-env-vars SECRET_KEY=$SECRET_KEY

images:
  # Specify the Docker image to be pushed to Artifact Registry
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$REPO_NAME:$SHORT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
